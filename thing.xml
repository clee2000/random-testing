<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="2" skipped="1" tests="8" time="0.212" timestamp="2022-06-02T13:48:21.288939" hostname="csl-mbp"><testcase classname="t" name="test1" time="0.001" /><testcase classname="t" name="test2" time="0.000" /><testcase classname="t" name="test3" time="0.000" /><testcase classname="t" name="test4" time="0.001"><failure message="assert 1 == 2&#10; +  where 1 = &lt;bound method Random.randint of &lt;random.Random object at 0x7f9c7e864410&gt;&gt;(1, 2)&#10; +    where &lt;bound method Random.randint of &lt;random.Random object at 0x7f9c7e864410&gt;&gt; = random.randint">def test4():
&gt;       assert random.randint(1, 2) == 2
E       assert 1 == 2
E        +  where 1 = &lt;bound method Random.randint of &lt;random.Random object at 0x7f9c7e864410&gt;&gt;(1, 2)
E        +    where &lt;bound method Random.randint of &lt;random.Random object at 0x7f9c7e864410&gt;&gt; = random.randint

t.py:26: AssertionError</failure></testcase><testcase classname="t.TestCalculatorClass" name="test_distance" time="0.000" /><testcase classname="t.TestCalculatorClass" name="test_sum_of_square" time="0.000"><skipped type="pytest.skip" message="no way of currently testing this">/Users/csl/zzzzzzzz/random-testing/t.py:42: no way of currently testing this</skipped></testcase><testcase classname="t.Testing" name="test_unittest_1" time="0.001"><failure message="AssertionError: 3 != 1">self = &lt;t.Testing testMethod=test_unittest_1&gt;

    def test_unittest_1(self):
        a = random.randint(1, 3)
        b = random.randint(1, 3)
&gt;       self.assertEqual(a, b)
E       AssertionError: 3 != 1

t.py:59: AssertionError</failure></testcase><testcase classname="t.Testing" name="test_unittest_2" time="0.000" /></testsuite></testsuites>